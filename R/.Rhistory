return(as.data.frame(ode(y = state_S5,times = t, func = derivs_S5, parms = pars_S5)))
}
out_S5=FSW.ode_S5(pars_S5)
#my output
out_S5
#=================================================================================================================================
#Summary calculations
infs_FSW=cbind(out$N_infections_FSW,out_S1$N_infections_FSW,out_S2$N_infections_FSW,out_S3$N_infections_FSW,out_S4$N_infections_FSW,out_S5$N_infections_FSW)
infs_FSW
total_infs_FSW<-colSums(infs_FSW)
total_infs_FSW
infections_averted_FSW_S1=out$N_infections_FSW-out_S1$N_infections_FSW
infections_averted_FSW_S2=out$N_infections_FSW-out_S2$N_infections_FSW
infections_averted_FSW_S3=out$N_infections_FSW-out_S3$N_infections_FSW
infections_averted_FSW_S4=out$N_infections_FSW-out_S4$N_infections_FSW
infections_averted_FSW_S5=out$N_infections_FSW-out_S5$N_infections_FSW
infections_averted_FSW=cbind(infections_averted_FSW_S1, infections_averted_FSW_S2, infections_averted_FSW_S3, infections_averted_FSW_S4, infections_averted_FSW_S5)
infections_averted_FSW
total_infections_averted_FSW<-colSums(infections_averted_FSW)
total_infections_averted_FSW
perc_infections_averted_FSW<- (total_infections_averted_FSW/total_infs_FSW)*100
perc_infections_averted_FSW
#Clients
infs_CLIENT=cbind(out$N_infections_CLIENT,out_S1$N_infections_CLIENT,out_S2$N_infections_CLIENT,out_S3$N_infections_CLIENT,out_S4$N_infections_CLIENT,out_S5$N_infections_CLIENT)
infs_CLIENT
total_infs_CLIENT<-colSums(infs_CLIENT)
total_infs_CLIENT
infections_averted_CLIENT_S1=out$N_infections_CLIENT-out_S1$N_infections_CLIENT
infections_averted_CLIENT_S2=out$N_infections_CLIENT-out_S2$N_infections_CLIENT
infections_averted_CLIENT_S3=out$N_infections_CLIENT-out_S3$N_infections_CLIENT
infections_averted_CLIENT_S4=out$N_infections_CLIENT-out_S4$N_infections_CLIENT
infections_averted_CLIENT_S5=out$N_infections_CLIENT-out_S5$N_infections_CLIENT
infections_averted_CLIENT=cbind(infections_averted_CLIENT_S1, infections_averted_CLIENT_S2, infections_averted_CLIENT_S3, infections_averted_CLIENT_S4, infections_averted_CLIENT_S5)
infections_averted_CLIENT
total_infections_averted_CLIENT<-colSums(infections_averted_CLIENT)
total_infections_averted_CLIENT
perc_infections_averted_CLIENT<- (total_infections_averted_CLIENT/total_infs_CLIENT)*100
perc_infections_averted_CLIENT
out$N_infections_CLIENT
install.packages("socialmixr")
#install.packages("socialmixr")
library("socialmixr")
devtools::install_github('sbfnk/socialmixr')
install.packages(c("cowplot", "extraDistr", "HDInterval", "Hmisc", "magick", "nloptr", "qs", "RcppGSL", "shiny", "viridis"))
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# Load libraries ---------------------------------------------------------
library(Rcpp)
library(RcppGSL)
library(HDInterval)
library(ggplot2)
library(data.table)
library(socialmixr)
library(shiny)
library(lubridate)
library(readxl)
library(cowplot)
library(stringr)
library(Hmisc)
library(extraDistr)
library(nloptr)
library(viridis)
library(magick)
library(dplyr)
library(qs)
#install.packages("Rcpp")
#install.packages("RcppGSL")
#install.packages("RcppArmadillo")
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# Load libraries ---------------------------------------------------------
library(Rcpp)
library(RcppGSL)
library(HDInterval)
library(ggplot2)
library(data.table)
library(socialmixr)
library(shiny)
library(lubridate)
library(readxl)
library(cowplot)
library(stringr)
library(Hmisc)
library(extraDistr)
library(nloptr)
library(viridis)
library(magick)
library(dplyr)
library(qs)
#install.packages("Rcpp")
#install.packages("RcppGSL")
#install.packages("RcppArmadillo")
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# Load libraries ---------------------------------------------------------
library(Rcpp)
library(RcppGSL)
library(HDInterval)
library(ggplot2)
library(data.table)
library(socialmixr)
library(shiny)
library(lubridate)
library(readxl)
library(cowplot)
library(stringr)
library(Hmisc)
library(extraDistr)
library(nloptr)
library(viridis)
library(magick)
library(dplyr)
library(qs)
#install.packages("Rcpp")
#install.packages("RcppGSL")
#install.packages("RcppArmadillo")
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# Load libraries ---------------------------------------------------------
library(Rcpp)
library(RcppGSL)
library(HDInterval)
library(ggplot2)
library(data.table)
library(socialmixr)
library(shiny)
library(lubridate)
library(readxl)
library(cowplot)
library(stringr)
library(Hmisc)
library(extraDistr)
library(nloptr)
library(viridis)
library(magick)
library(dplyr)
library(qs)
#install.packages("Rcpp")
#install.packages("RcppGSL")
#install.packages("RcppArmadillo")
install.packages("Rcpp")
install.packages("RcppGSL")
install.packages("RcppArmadillo")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("RcppGSL")
install.packages("RcppArmadillo")
library(Rcpp)
library(RcppGSL)
library(HDInterval)
library(ggplot2)
library(data.table)
library(socialmixr)
library(shiny)
library(lubridate)
library(readxl)
library(cowplot)
library(stringr)
library(Hmisc)
library(extraDistr)
library(nloptr)
library(viridis)
library(magick)
library(dplyr)
library(qs)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# Load libraries ---------------------------------------------------------
library(Rcpp)
library(RcppGSL)
library(HDInterval)
library(ggplot2)
library(data.table)
library(socialmixr)
library(shiny)
library(lubridate)
library(readxl)
library(cowplot)
library(stringr)
library(Hmisc)
library(extraDistr)
library(nloptr)
library(viridis)
library(magick)
library(dplyr)
library(qs)
#install.packages("Rcpp")
#install.packages("RcppGSL")
#install.packages("RcppArmadillo")
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# Load libraries ---------------------------------------------------------
library(Rcpp)
library(RcppGSL)
library(HDInterval)
library(ggplot2)
library(data.table)
library(socialmixr)
library(shiny)
library(lubridate)
library(readxl)
library(cowplot)
library(stringr)
library(Hmisc)
library(extraDistr)
library(nloptr)
library(viridis)
library(magick)
library(dplyr)
library(qs)
#install.packages("Rcpp")
#install.packages("RcppGSL")
#install.packages("RcppArmadillo")
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
# 1-getting-started.R
# covidm options
cm_path = "C:/Users/Matt/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
#cm_path = "C:/Users/matt_/Google Drive/Research/github/covidm"; ### CHANGE THIS to reflect the path to covidm.
cm_force_rebuild = T;
cm_build_verbose = T;
cm_version = 1;
source(paste0(cm_path, "/R/covidm.R"))
# build parameters for all of UK, down to the regional level (level 2).
params = cm_parameters_SEI3R(cm_uk_locations("UK", 2), deterministic = T);
# # alternatively: build parameters for another country.
# params = cm_parameters_SEI3R("Italy");
# run the model
run = cm_simulate(params, 1)
# show results
ggplot(run$dynamics[compartment == "cases"]) +
geom_line(aes(t, value, colour = group, group = group)) +
facet_wrap(~population)
setwd("C:/Users/Matt/Google Drive/Research/github/kenya_mixing/R")
#libraries
library(tidyverse)
library(reshape2)
library(ggplot2)
library(plotly)
library(dplyr)
library(broom)
library(tibble)
library(ggpubr)
library(gridExtra)
library(grid)
library(lattice)
library(RColorBrewer)
library(ggsci)
library(socialmixr)
library(magrittr)
library(qwraps2)
library(data.table)
library(scales)
library(readxl)
library(ggeasy)
library(xlsx)
#Functions

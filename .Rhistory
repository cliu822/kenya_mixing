eigenratio_prem_new <-max(eigen(manual_matrix_adj_by_prem_new, only.values = TRUE)$values)/max(eigen(adjusted_prem_matrix_new, only.values = TRUE)$values)
eigenratio_prem_new
1-eigenratio_kiti
1-eigenratio_prem_old
1-eigenratio_prem_new
scaling_factor_prem_old
scaling_factor_prem_new
scaling_factor_kiti
#'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#'
#'
#'              Calculating R0
#'
#'
#'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#' get distribution of R0
#' this is the distribution we used based on the meta-analysis Amy did, but may want to use something Kenya specific if available?
r_values <- rnorm(1000, 2.6, 0.54)
#removing NA values (comparing with adjusted kiti and prem matrices with missing components also)
for (i in 1:length(manual_50plus)){
manual_50plus[[i]]$all[,1]<-0}
for (i in 1:length(manual_50plus_phys)){
manual_50plus_phys[[i]]$all[,1]<-0}
#calculating scaling factors for each bootstrapped matrix
r0_scaling_prem_new <- sapply(
1:length(manual_50plus),
function(x){
max(Re(eigen(manual_50plus[[x]]$all)$values[1]))/max(Re(eigen(prem_new_comp)$values[1]))
}
)
r0_scaling_prem_old <- sapply(
1:length(manual_50plus),
function(x){
max(Re(eigen(manual_50plus[[x]]$all)$values[1]))/max(Re(eigen(prem_old_comp)$values[1]))
}
)
r0_scaling_kiti <- sapply(
1:length(manual_50plus),
function(x){
max(Re(eigen(manual_50plus_phys[[x]]$all)$values[1]))/max(Re(eigen(kiti_matrix_comp)$values[1]))
}
)
adjusted_r0_prem_new<-r0_scaling_prem_new*r_values
adjusted_r0_prem_old<-r0_scaling_prem_old*r_values
adjusted_r0_kiti<-r0_scaling_kiti*r_values
mean(adjusted_r0_prem_new)
mean(adjusted_r0_prem_old)
mean(adjusted_r0_kiti)
adj_r0_df<- data.frame(r_values, adjusted_r0_prem_new, adjusted_r0_prem_old, adjusted_r0_kiti)
head(adj_r0_df)
quantile(adjusted_r0_kiti)
quantile(adjusted_r0_prem_old)
quantile(adjusted_r0_prem_new)
s<- adjusted_r0_kiti
adj_r0_df %>%
summarise(mean(s),
std = sqrt(var(s)),
lower = mean(s) - qnorm(.975)*std/sqrt(n()),
upper = mean(s) + qnorm(.975)*std/sqrt(n()))
s<- adjusted_r0_prem_new
adj_r0_df %>%
summarise(mean(s),
std = sqrt(var(s)),
lower = mean(s) - qnorm(.975)*std/sqrt(n()),
upper = mean(s) + qnorm(.975)*std/sqrt(n()))
s<- adjusted_r0_prem_old
adj_r0_df %>%
summarise(mean(s),
std = sqrt(var(s)),
lower = mean(s) - qnorm(.975)*std/sqrt(n()),
upper = mean(s) + qnorm(.975)*std/sqrt(n()))
quantile(adjusted_r0_kiti)
quantile(adjusted_r0_prem_old)
quantile(adjusted_r0_prem_new)
mean(adjusted_r0_kiti)
mean(adjusted_r0_prem_old)
mean(adjusted_r0_prem_new)
#calculating initial R0 for new R0 to be =1
1/mean(scaling_factor_kiti)
1/mean(scaling_factor_prem_old)
1/mean(scaling_factor_prem_new)
#'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#'
#'
#'              Calculating low bound of R0 using first Rt estimate
#'
#'
#'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#' get distribution of R0
#' this is the distribution we used based on the meta-analysis Amy did, but may want to use something Kenya specific if available?
r_values_lowr0 <- rnorm(1000, 1.46, 0.38)
#removing NA values (comparing with adjusted kiti and prem matrices with missing components also)
for (i in 1:length(manual_50plus)){
manual_50plus[[i]]$all[,1]<-0}
for (i in 1:length(manual_50plus_phys)){
manual_50plus_phys[[i]]$all[,1]<-0}
#calculating scaling factors for each bootstrapped matrix
r0_scaling_prem_new <- sapply(
1:length(manual_50plus),
function(x){
max(Re(eigen(manual_50plus[[x]]$all)$values[1]))/max(Re(eigen(prem_new_comp)$values[1]))
}
)
r0_scaling_prem_old <- sapply(
1:length(manual_50plus),
function(x){
max(Re(eigen(manual_50plus[[x]]$all)$values[1]))/max(Re(eigen(prem_old_comp)$values[1]))
}
)
r0_scaling_kiti <- sapply(
1:length(manual_50plus),
function(x){
max(Re(eigen(manual_50plus_phys[[x]]$all)$values[1]))/max(Re(eigen(kiti_matrix_comp)$values[1]))
}
)
adjusted_r0_prem_new_lowr0<-r0_scaling_prem_new*r_values_lowr0
adjusted_r0_prem_old_lowr0<-r0_scaling_prem_old*r_values_lowr0
adjusted_r0_kiti_lowr0<-r0_scaling_kiti*r_values_lowr0
mean(adjusted_r0_prem_new_lowr0)
mean(adjusted_r0_prem_old_lowr0)
mean(adjusted_r0_kiti_lowr0)
adj_r0_df_lowr0<- data.frame(r_values_lowr0, adjusted_r0_prem_new_lowr0, adjusted_r0_prem_old_lowr0, adjusted_r0_kiti_lowr0)
head(adj_r0_df_lowr0)
quantile(adjusted_r0_kiti_lowr0)
quantile(adjusted_r0_prem_old_lowr0)
quantile(adjusted_r0_prem_new_lowr0)
s<- adjusted_r0_kiti_lowr0
adj_r0_df_lowr0 %>%
summarise(mean(s),
std = sqrt(var(s)),
lower = mean(s) - qnorm(.975)*std/sqrt(n()),
upper = mean(s) + qnorm(.975)*std/sqrt(n()))
s<- adjusted_r0_prem_new_lowr0
adj_r0_df_lowr0 %>%
summarise(mean(s),
std = sqrt(var(s)),
lower = mean(s) - qnorm(.975)*std/sqrt(n()),
upper = mean(s) + qnorm(.975)*std/sqrt(n()))
s<- adjusted_r0_prem_old_lowr0
adj_r0_df_lowr0 %>%
summarise(mean(s),
std = sqrt(var(s)),
lower = mean(s) - qnorm(.975)*std/sqrt(n()),
upper = mean(s) + qnorm(.975)*std/sqrt(n()))
quantile(adjusted_r0_kiti_lowr0)
quantile(adjusted_r0_prem_old_lowr0)
quantile(adjusted_r0_prem_new_lowr0)
mean(adjusted_r0_kiti_lowr0)
mean(adjusted_r0_prem_old_lowr0)
mean(adjusted_r0_prem_new_lowr0)
#Figure 3------------------------------------------------------------------------------------------------------------------------------------------------------------------
#mage age cat lits
age_labels<-c("0-17" = "0-17", "18-59" = "18-59","60-120" = "60+")
#set titles in centre of all plots
theme_update(plot.title = element_text(hjust = 0.5))
manual_matrix[1,1]<-NA
manual_matrix[2,1]<-NA
manual_matrix[3,1]<-NA
manual_plot <- melt(manual_matrix, varnames = c("age1", "age2"), value.name = "contacts")
manual_matrix_hh[1,1]<-NA
manual_matrix_hh[2,1]<-NA
manual_matrix_hh[3,1]<-NA
manual_plot_hh <- melt(manual_matrix_hh, varnames = c("age1", "age2"), value.name = "contacts")
#manual_plot_hh_S1<- kenya_plot_hh_S1[-c(10,11,12,13,14,15), ]
manual_matrix_nonhh[1,1]<-NA
manual_matrix_nonhh[2,1]<-NA
manual_matrix_nonhh[3,1]<-NA
manual_plot_nonhh <- melt(manual_matrix_nonhh, varnames = c("age1", "age2"), value.name = "contacts")
#manual_plot_nonhh_S1<- kenya_plot_nonhh_S1[-c(10,11,12,13,14,15), ]
manual_matrix_phys[1,1]<-NA
manual_matrix_phys[2,1]<-NA
manual_matrix_phys[3,1]<-NA
manual_plot_phys <- melt(manual_matrix_phys, varnames = c("age1", "age2"), value.name = "contacts")
#manual_plot_phys_S1<- kenya_plot_phys_S1[-c(10,11,12,13,14,15), ]
manual_matrix_nonphys[1,1]<-NA
manual_matrix_nonphys[2,1]<-NA
manual_matrix_nonphys[3,1]<-NA
manual_plot_nonphys <- melt(manual_matrix_nonphys, varnames = c("age1", "age2"), value.name = "contacts")
#manual_plot_nonphys_S1<- kenya_plot_nonphys_S1[-c(10,11,12,13,14,15), ]
manual_plot_fig<-ggplot(manual_plot, aes(x = age2, y = age1, fill = contacts)) +
ggtitle("A - Aggregate mixing matrix")+
theme_bw() +
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+ scale_y_discrete(labels=age_labels)+xlab("Respondent age") + ylab("Contact age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 2, 4, 10, 24)/24,
limits = c(0, 20))
manual_plot_fig
hh<-ggplot(manual_plot_hh, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
ggtitle("B - Household contacts")+
theme_bw() +
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+ scale_y_discrete(labels=age_labels)+xlab("Respondent age") + ylab("Contact age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 2, 4, 10, 24)/24,
limits = c(0, 20))
hh
nonhh<-ggplot(manual_plot_nonhh, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
ggtitle("C - Non-household contacts")+
theme_bw() +
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+ scale_y_discrete(labels=age_labels)+xlab("Respondent age") + ylab("Contact age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 2, 4, 10, 24)/24,
limits = c(0, 20))
nonhh
phys<-ggplot(manual_plot_phys, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
ggtitle("D - Physical contacts")+
theme_bw() +
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+ scale_y_discrete(labels=age_labels)+xlab("Respondent age") + ylab("Contact age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 2, 4, 10, 24)/24,
limits = c(0, 20))
phys
nonphys<-ggplot(manual_plot_nonphys, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
ggtitle("E - Non-physical contacts")+
theme_bw() +
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+ scale_y_discrete(labels=age_labels)+xlab("Respondent age") + ylab("Contact age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 2, 4, 10, 24)/24,
limits = c(0, 20))
nonphys
p1<-manual_plot_fig
p2 <- hh
p3 <- nonhh
p4 <- phys
p5 <- nonphys
adjusted_matrices_fig<-grid.arrange(
grobs = list(p1, p2, p3,p4,p5),
# widths = c(1, 1, 1),
layout_matrix = rbind(c(1, 2, 3),
c(1, 4, 5))
)
ggsave(filename = "outputs/fig_3_asym_.png", adjusted_matrices_fig, width = 13, height = 6.5, dpi = 1000)
#Figure 3------------------------------------------------------------------------------------------------------------------------------------------------------------------
#make age cat labs
#age_labels<-c("[0,18)" = "0-17", "[18,50)" = "18-50","50+" = "50+")
age_labels<-c("0-17" = "0-17", "18-49" = "18-49","50-120" = "50+")
#set titles in centre of all plots
theme_update(plot.title = element_text(hjust = 0.5))
##########################################################
#
#                 Importing data to make figs with
#
##########################################################
#assuming 1-3 run
##########################################################
#
#                 Coding for plots
#
##########################################################
#plot physical contacts only
manual_50plus_phys_mean[,1]<-NA
plot_physonly <- melt(manual_50plus_phys_mean, varnames = c("age1", "age2"), value.name = "contacts")
phys_plot<-ggplot(plot_physonly, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
ggtitle("A - Current study - physical contacts only")+
theme_bw() +
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+
scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 1, 3, 5, 12)/12,
limits = c(0, 14))
phys_plot
#plot kiti B
plot_kiti <- melt(adjusted_matrix_kiti, varnames = c("age1", "age2"), value.name = "contacts")
kiti_plot<-ggplot(plot_kiti, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
theme_bw() +
ggtitle("B - Adjusted matrix from Kiti et al. (2014) - physical contacts")+
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+
scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 1, 3, 5, 12)/12,
limits = c(0, 14))
kiti_plot
#Plotting age-imputed matrix (Kiti) C
plot_allages_kiti <- melt(manual_matrix_adj_by_kiti, varnames = c("age1", "age2"), value.name = "contacts")
plot_imputed_kiti<-ggplot(plot_allages_kiti, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
theme_bw() +
ggtitle("C - Imputed physical matrix using Kiti et al. (2014)")+
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+ scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 1, 3, 5, 12)/12,
limits = c(0, 14))
plot_imputed_kiti
#plot all contacts D
manual_50plus_mean[,1]<-NA
plot_physonly <- melt(manual_50plus_mean, varnames = c("age1", "age2"), value.name = "contacts")
all_plot<-ggplot(plot_physonly, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
ggtitle("D - Current study - all contacts")+
theme_bw() +
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+
scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 4, 12, 20, 48)/48,
limits = c(0, 50))
all_plot
#plot Prem E
plot_prem <- melt(adjusted_prem_matrix_new, varnames = c("age1", "age2"), value.name = "contacts")
prem_plot<-ggplot(plot_prem, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
theme_bw() +
ggtitle("E - Adjusted matrix from Prem et al (2020)")+
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+
xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 4, 12, 20, 48)/48,
limits = c(0, 50))
prem_plot
#Plotting age-imputed matrix (Prem) F
plot_allages_prem <- melt(manual_matrix_adj_by_prem_new, varnames = c("age1", "age2"), value.name = "contacts")
plot_imputed_prem<-ggplot(plot_allages_prem, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
theme_bw() +
ggtitle("F - Imputed matrix using Prem et al. (2020)")+
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+ scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 4, 12, 20, 48)/48,
limits = c(0, 50))
plot_imputed_prem
#name part of the plotting grid
p1 <- phys_plot
p2 <- kiti_plot
p3 <- plot_imputed_kiti
p4 <- all_plot
p5 <- prem_plot
p6 <- plot_imputed_prem
#arrange as one big and four little
adjusted_matrices_fig<-grid.arrange(
grobs = list(p1, p2, p3,p4,p5,p6),
# widths = c(1, 1, 1),
layout_matrix = rbind(c(1, 2, 3),
c(4, 5, 6))
)
ggsave(filename = "outputs/Fig_4_adjusted_matrices.png", adjusted_matrices_fig, width = 15, height = 6.5, dpi = 1000)
#Figure 3------------------------------------------------------------------------------------------------------------------------------------------------------------------
#make age cat labs
#age_labels<-c("[0,18)" = "0-17", "[18,50)" = "18-50","50+" = "50+")
age_labels<-c("0-17" = "0-17", "18-49" = "18-49","50-120" = "50+")
#set titles in centre of all plots
theme_update(plot.title = element_text(hjust = 0.5))
##########################################################
#
#                 Importing data to make figs with
#
##########################################################
#assuming 1-3 run
##########################################################
#
#                 Coding for plots
#
##########################################################
#plot physical contacts only
manual_50plus_phys_mean[,1]<-NA
plot_physonly <- melt(manual_50plus_phys_mean, varnames = c("age1", "age2"), value.name = "contacts")
phys_plot<-ggplot(plot_physonly, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
ggtitle("A - Current study - physical contacts only")+
theme_bw() +
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+
scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 1, 3, 5, 12)/12,
limits = c(0, 14))
phys_plot
#plot kiti B
plot_kiti <- melt(adjusted_matrix_kiti, varnames = c("age1", "age2"), value.name = "contacts")
kiti_plot<-ggplot(plot_kiti, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
theme_bw() +
ggtitle("B - Adjusted physical matrix from Kiti et al. (2014)")+
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+
scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 1, 3, 5, 12)/12,
limits = c(0, 14))
kiti_plot
#Plotting age-imputed matrix (Kiti) C
plot_allages_kiti <- melt(manual_matrix_adj_by_kiti, varnames = c("age1", "age2"), value.name = "contacts")
plot_imputed_kiti<-ggplot(plot_allages_kiti, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
theme_bw() +
ggtitle("C - Imputed physical matrix using Kiti et al. (2014)")+
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+ scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 1, 3, 5, 12)/12,
limits = c(0, 14))
plot_imputed_kiti
#plot all contacts D
manual_50plus_mean[,1]<-NA
plot_physonly <- melt(manual_50plus_mean, varnames = c("age1", "age2"), value.name = "contacts")
all_plot<-ggplot(plot_physonly, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
ggtitle("D - Current study - all contacts")+
theme_bw() +
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+
scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 4, 12, 20, 48)/48,
limits = c(0, 50))
all_plot
#plot Prem E
plot_prem <- melt(adjusted_prem_matrix_new, varnames = c("age1", "age2"), value.name = "contacts")
prem_plot<-ggplot(plot_prem, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
theme_bw() +
ggtitle("E - Adjusted matrix from Prem et al (2020)")+
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+
xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 4, 12, 20, 48)/48,
limits = c(0, 50))
prem_plot
#Plotting age-imputed matrix (Prem) F
plot_allages_prem <- melt(manual_matrix_adj_by_prem_new, varnames = c("age1", "age2"), value.name = "contacts")
plot_imputed_prem<-ggplot(plot_allages_prem, aes(x = age2, y = age1, fill = contacts)) + theme(legend.position = "bottom") +
theme_bw() +
ggtitle("F - Imputed matrix using Prem et al. (2020)")+
theme(legend.position = "bottom") +
labs(fill="Contacts")+scale_x_discrete(labels=age_labels)+ scale_y_discrete(labels=age_labels)+xlab("Contact age") + ylab("Respondent age")+
geom_tile()+
geom_text(aes(label = round(contacts,digits=1))) +
scale_fill_gradientn(
colors=c("#0D5257","#00BF6F", "#FFB81C"),
na.value = "gray",
values = c(0, 4, 12, 20, 48)/48,
limits = c(0, 50))
plot_imputed_prem
#name part of the plotting grid
p1 <- phys_plot
p2 <- kiti_plot
p3 <- plot_imputed_kiti
p4 <- all_plot
p5 <- prem_plot
p6 <- plot_imputed_prem
#arrange as one big and four little
adjusted_matrices_fig<-grid.arrange(
grobs = list(p1, p2, p3,p4,p5,p6),
# widths = c(1, 1, 1),
layout_matrix = rbind(c(1, 2, 3),
c(4, 5, 6))
)
ggsave(filename = "outputs/Fig_4_adjusted_matrices.png", adjusted_matrices_fig, width = 15, height = 6.5, dpi = 1000)
